path <- "C:/Users/Tess/OneDrive - Johns Hopkins/Kharituwe WGS Pipeline/"
library(cowplot)
library(tidyverse)
library(RColorBrewer)
library(scales)
library(ggridges)
library(wesanderson)
###################################
# READ IN AND COMBINE DATA        #
###################################
#READ IN clusters, distance matrix, and merged cleaned study data
clusters_all <- read.csv(paste0(path, "output_pipeline/clusters_w_singles.csv"))
clusters <- read.csv(paste0(path, "output_pipeline/clusters.csv"))
data <- read.csv(paste0(path, "output_analysis/study_data_clean.csv"))
#clean primary residence and HHID further
prim_res_all <- unique(c(sort(unique(data %>% filter(study_site=="Soshanguve" & prim_res!="Other - Soshanguve") %>% pull(prim_res))), "Other - Soshanguve",
sort(unique(data %>% filter(study_site=="Vhembe" & prim_res!="Other - Vheme") %>% pull(prim_res))), "Other - Vhembe",
sort(unique(data %>% filter(study_site=="Capricorn" & prim_res!="Other - Capricorn") %>% pull(prim_res))), "Other - Capricorn"))
data <- data %>% mutate(prim_res=factor(prim_res, levels=prim_res_all))
max_hh <- max(unique(data %>% filter(hhid!="Unlinked") %>% mutate(hhid=as.numeric(str_remove(hhid, "Household "))) %>% pull(hhid)))
data <- data %>% mutate(hhid=factor(hhid, levels=c("Unlinked", paste0("Household ", 1:max_hh))))
#MERGE WITH CLUSTERS
clusters_merge <- left_join(clusters, data, by=c("sample"="id"))
#renumber clusters based on size within each snp_threshold
clusters_merge <- clusters_merge %>%
group_by(snp_threshold) %>%
mutate(cluster_id_tmp=cluster_size+cluster/1000) %>%
mutate(cluster_id=dense_rank(cluster_id_tmp)) %>%
select(-cluster_id_tmp)
#more concise household and site labeling
clusters_merge <- clusters_merge %>% group_by(cluster_id, hhid, snp_threshold) %>%
mutate(linked_hhs=if_else(hhid=="Unlinked", 0, n())) %>%
mutate(hh_lab=if_else(linked_hhs>1, "Clusters with HH Contacts", "No HH Contacts"))
clusters_merge <- clusters_merge %>% group_by(cluster_id, study_site, snp_threshold) %>%
mutate(linked_sites=n()) %>%
mutate(site_lab=case_when(linked_sites==cluster_size & study_site=="Soshanguve"~"All Urban",
linked_sites==cluster_size & study_site!="Soshanguve"~"All Rural",
TRUE~"Mixed"))
#further arrange cluster IDs based on site/site differences
clusters_merge <- clusters_merge %>%
group_by(snp_threshold) %>%
mutate(site_lab_tmp=case_when(site_lab=="All Urban"~0.1,
site_lab=="All Rural" & study_site=="Vhembe"~0.2,
site_lab=="All Rural" & study_site=="Capricorn"~0.3,
site_lab=="Mixed"~0.4)) %>%
mutate(cluster_id2_tmp=cluster_size+site_lab_tmp+cluster/10000) %>%
mutate(cluster_id2=dense_rank(cluster_id2_tmp)) %>%
select(-c(cluster_id2_tmp, site_lab_tmp))
clusters_merge <- clusters_merge %>%
mutate(site_lab=factor(site_lab, levels=c("All Urban", "All Rural", "Mixed")))
#factor site variable
clusters_merge <- clusters_merge %>%
mutate(study_site=factor(study_site, levels=c("Soshanguve", "Vhembe", "Capricorn")))
#analyze overlap between large cluster at 12 and 20 SNPs
clusters12 <- clusters_merge %>% ungroup() %>% filter(snp_threshold==12) %>%
select(sample, cluster_id, cluster_size)
clusters20 <- clusters_merge %>% ungroup() %>% filter(snp_threshold==20) %>%
select(sample, cluster_id, cluster_size, study_site)
large_cluster <- left_join(clusters20, clusters12, by="sample", suffix=c(".20", ".12"))
large_cluster <- large_cluster %>% filter(cluster_size.20==max(large_cluster$cluster_size.20))
large_cluster <- large_cluster %>%
mutate(cluster_lab=if_else(is.na(cluster_id.12), "Singleton at 12 SNPs",
paste0(" (size ", cluster_size.12, ")")))
large_cluster <- large_cluster %>%
mutate(tmp=if_else(is.na(cluster_size.12), 1, cluster_size.12+cluster_id.12/10000)) %>%
mutate(cluster_lab_pt2=dense_rank(tmp)-1) %>%
select(-tmp)
large_cluster <- large_cluster %>%
mutate(cluster_lab=if_else(is.na(cluster_id.12), cluster_lab,
paste0("Cluster ", cluster_lab_pt2,
cluster_lab)))
large_cluster <- large_cluster %>% select(sample, cluster_lab, study_site)
#merge in other isolates (so we can filter them out)
large_cluster <- rbind(large_cluster %>% mutate(exclude=0),
data %>% select(id, study_site) %>%
filter(!(id %in% large_cluster$sample)) %>%
rename(sample=id) %>%
mutate(exclude=1, cluster_lab=""))
large_cluster <- large_cluster %>%
mutate(sample=paste0("\"", sample, "\"")) #cytoscape requires quotes around the ID names
write.csv(large_cluster, file=paste0(path, "output_analysis/large_cluster_for_tgv.csv"), row.names=F)
lineage1 <- sort(unique(data %>% filter(lineage_short==1) %>% pull(lineage_lab)))
lineage2 <- sort(unique(data %>% filter(lineage_short==2) %>% pull(lineage_lab)))
lineage3 <- sort(unique(data %>% filter(lineage_short==3) %>% pull(lineage_lab)))
lineage4 <- sort(unique(data %>% filter(lineage_short==4) %>% pull(lineage_lab)))
colors1 <- rev(brewer.pal(n=4, name="RdPu")[2:3])
colors2 <- rev(brewer.pal(n=length(lineage2)+1, name="Reds")[2:4])
colors3 <- rev(brewer.pal(n=4, name="YlOrBr")[2:3])
colors4 <- c(rev(brewer.pal(n=7, name="Greens")[2:7]),
rev(brewer.pal(n=7, name="Blues")[2:7]),
rev(brewer.pal(n=7, name="Purples")[2:7]))
colors4 <- c(rev(brewer.pal(n=9, name="Greens")[2:9]),
rev(brewer.pal(n=7, name="PuBuGn")[2:7]),
rev(brewer.pal(n=9, name="BuPu")[6:9]))
names(colors1) <- lineage1
names(colors2) <- lineage2
names(colors3) <- lineage3
names(colors4) <- lineage4
colors <- c(colors1, colors2, colors3, colors4)
#soshanguve vs. vhembe vs. capricorn
site_colors2 <- c(brewer.pal(n=3, name="Dark2")[2],
brewer.pal(n=5, name="PuBu")[c(3,5)])
names(site_colors2) <- c("Soshanguve", "Vhembe", "Capricorn")
#urban vs. rural vs. mixed
site_colors <- c(site_colors2["Soshanguve"], brewer.pal(n=5, name="PuBu")[4],
"goldenrod")
names(site_colors) <- levels(clusters_merge$site_lab)
#VERSION OF MAIN FIGURE ("top panel") that includes %s above the mixed bars, for union abstract
fig1 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("A. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig1
#VERSION OF MAIN FIGURE ("top panel") that includes %s above the mixed bars, for union abstract
clusters_merge <- clusters_merge %>% group_by(snp_threshold, cluster_size) %>%
mutate(only_1_mixed=if_else(site_lab=="Mixed", n(), 0))
View(clusters_merge)
View(clusters_merge %>% select(cluster, cluster_size, snp_threshold, site_lab, only_1_mixed))
#VERSION OF MAIN FIGURE ("top panel") that includes %s above the mixed bars, for union abstract
clusters_unique <- unique(clusters_merge %>% select(cluster, snp_threshold, cluster_size ,site_lab))
View(clusters_unique)
clusters_unique <- clusters_unique %>% group_by(snp_threshold, cluster_size) %>%
mutate(only_1_mixed=if_else(site_lab=="Mixed", n(), 0))
View(clusters_unique)
clusters_merge <- left_join(clusters_merge, clusters_unique)
View(clusters_merge)
#specify path where study data is located
path <- "C:/Users/Tess/OneDrive - Johns Hopkins/Kharituwe WGS Pipeline/"
library(cowplot)
library(tidyverse)
library(RColorBrewer)
library(scales)
library(ggridges)
library(wesanderson)
###################################
# READ IN AND COMBINE DATA        #
###################################
#READ IN clusters, distance matrix, and merged cleaned study data
clusters_all <- read.csv(paste0(path, "output_pipeline/clusters_w_singles.csv"))
clusters <- read.csv(paste0(path, "output_pipeline/clusters.csv"))
data <- read.csv(paste0(path, "output_analysis/study_data_clean.csv"))
#clean primary residence and HHID further
prim_res_all <- unique(c(sort(unique(data %>% filter(study_site=="Soshanguve" & prim_res!="Other - Soshanguve") %>% pull(prim_res))), "Other - Soshanguve",
sort(unique(data %>% filter(study_site=="Vhembe" & prim_res!="Other - Vheme") %>% pull(prim_res))), "Other - Vhembe",
sort(unique(data %>% filter(study_site=="Capricorn" & prim_res!="Other - Capricorn") %>% pull(prim_res))), "Other - Capricorn"))
data <- data %>% mutate(prim_res=factor(prim_res, levels=prim_res_all))
max_hh <- max(unique(data %>% filter(hhid!="Unlinked") %>% mutate(hhid=as.numeric(str_remove(hhid, "Household "))) %>% pull(hhid)))
data <- data %>% mutate(hhid=factor(hhid, levels=c("Unlinked", paste0("Household ", 1:max_hh))))
#MERGE WITH CLUSTERS
clusters_merge <- left_join(clusters, data, by=c("sample"="id"))
#renumber clusters based on size within each snp_threshold
clusters_merge <- clusters_merge %>%
group_by(snp_threshold) %>%
mutate(cluster_id_tmp=cluster_size+cluster/1000) %>%
mutate(cluster_id=dense_rank(cluster_id_tmp)) %>%
select(-cluster_id_tmp)
#more concise household and site labeling
clusters_merge <- clusters_merge %>% group_by(cluster_id, hhid, snp_threshold) %>%
mutate(linked_hhs=if_else(hhid=="Unlinked", 0, n())) %>%
mutate(hh_lab=if_else(linked_hhs>1, "Clusters with HH Contacts", "No HH Contacts"))
clusters_merge <- clusters_merge %>% group_by(cluster_id, study_site, snp_threshold) %>%
mutate(linked_sites=n()) %>%
mutate(site_lab=case_when(linked_sites==cluster_size & study_site=="Soshanguve"~"All Urban",
linked_sites==cluster_size & study_site!="Soshanguve"~"All Rural",
TRUE~"Mixed"))
#further arrange cluster IDs based on site/site differences
clusters_merge <- clusters_merge %>%
group_by(snp_threshold) %>%
mutate(site_lab_tmp=case_when(site_lab=="All Urban"~0.1,
site_lab=="All Rural" & study_site=="Vhembe"~0.2,
site_lab=="All Rural" & study_site=="Capricorn"~0.3,
site_lab=="Mixed"~0.4)) %>%
mutate(cluster_id2_tmp=cluster_size+site_lab_tmp+cluster/10000) %>%
mutate(cluster_id2=dense_rank(cluster_id2_tmp)) %>%
select(-c(cluster_id2_tmp, site_lab_tmp))
clusters_merge <- clusters_merge %>%
mutate(site_lab=factor(site_lab, levels=c("All Urban", "All Rural", "Mixed")))
#factor site variable
clusters_merge <- clusters_merge %>%
mutate(study_site=factor(study_site, levels=c("Soshanguve", "Vhembe", "Capricorn")))
#analyze overlap between large cluster at 12 and 20 SNPs
clusters12 <- clusters_merge %>% ungroup() %>% filter(snp_threshold==12) %>%
select(sample, cluster_id, cluster_size)
clusters20 <- clusters_merge %>% ungroup() %>% filter(snp_threshold==20) %>%
select(sample, cluster_id, cluster_size, study_site)
large_cluster <- left_join(clusters20, clusters12, by="sample", suffix=c(".20", ".12"))
large_cluster <- large_cluster %>% filter(cluster_size.20==max(large_cluster$cluster_size.20))
large_cluster <- large_cluster %>%
mutate(cluster_lab=if_else(is.na(cluster_id.12), "Singleton at 12 SNPs",
paste0(" (size ", cluster_size.12, ")")))
large_cluster <- large_cluster %>%
mutate(tmp=if_else(is.na(cluster_size.12), 1, cluster_size.12+cluster_id.12/10000)) %>%
mutate(cluster_lab_pt2=dense_rank(tmp)-1) %>%
select(-tmp)
large_cluster <- large_cluster %>%
mutate(cluster_lab=if_else(is.na(cluster_id.12), cluster_lab,
paste0("Cluster ", cluster_lab_pt2,
cluster_lab)))
large_cluster <- large_cluster %>% select(sample, cluster_lab, study_site)
#merge in other isolates (so we can filter them out)
large_cluster <- rbind(large_cluster %>% mutate(exclude=0),
data %>% select(id, study_site) %>%
filter(!(id %in% large_cluster$sample)) %>%
rename(sample=id) %>%
mutate(exclude=1, cluster_lab=""))
large_cluster <- large_cluster %>%
mutate(sample=paste0("\"", sample, "\"")) #cytoscape requires quotes around the ID names
write.csv(large_cluster, file=paste0(path, "output_analysis/large_cluster_for_tgv.csv"), row.names=F)
lineage1 <- sort(unique(data %>% filter(lineage_short==1) %>% pull(lineage_lab)))
lineage2 <- sort(unique(data %>% filter(lineage_short==2) %>% pull(lineage_lab)))
lineage3 <- sort(unique(data %>% filter(lineage_short==3) %>% pull(lineage_lab)))
lineage4 <- sort(unique(data %>% filter(lineage_short==4) %>% pull(lineage_lab)))
colors1 <- rev(brewer.pal(n=4, name="RdPu")[2:3])
colors2 <- rev(brewer.pal(n=length(lineage2)+1, name="Reds")[2:4])
colors3 <- rev(brewer.pal(n=4, name="YlOrBr")[2:3])
colors4 <- c(rev(brewer.pal(n=7, name="Greens")[2:7]),
rev(brewer.pal(n=7, name="Blues")[2:7]),
rev(brewer.pal(n=7, name="Purples")[2:7]))
colors4 <- c(rev(brewer.pal(n=9, name="Greens")[2:9]),
rev(brewer.pal(n=7, name="PuBuGn")[2:7]),
rev(brewer.pal(n=9, name="BuPu")[6:9]))
names(colors1) <- lineage1
names(colors2) <- lineage2
names(colors3) <- lineage3
names(colors4) <- lineage4
colors <- c(colors1, colors2, colors3, colors4)
#soshanguve vs. vhembe vs. capricorn
site_colors2 <- c(brewer.pal(n=3, name="Dark2")[2],
brewer.pal(n=5, name="PuBu")[c(3,5)])
names(site_colors2) <- c("Soshanguve", "Vhembe", "Capricorn")
#urban vs. rural vs. mixed
site_colors <- c(site_colors2["Soshanguve"], brewer.pal(n=5, name="PuBu")[4],
"goldenrod")
names(site_colors) <- levels(clusters_merge$site_lab)
#VERSION OF MAIN FIGURE ("top panel") that includes %s above the mixed bars, for union abstract
clusters_unique <- unique(clusters_merge %>% select(cluster, snp_threshold, cluster_size ,site_lab))
clusters_unique <- clusters_unique %>% group_by(snp_threshold, cluster_size) %>%
mutate(only_1_mixed=if_else(site_lab=="Mixed", n(), 0))
clusters_merge <- left_join(clusters_merge, clusters_unique)
View(clusters_merge)
names(clusters_merge)
unique(clusters_merge$study_site)
clusters_merge <- clusters_merge %>% group_by(snp_threshold, cluster_size, cluster) %>%
mutate(mixed_lab=if_else(only_1_mixed==1, paste0(100*sum(study_site=="Soshanguve")/n(), "%"), ""))
View(clusters_merge)
clusters_merge <- clusters_merge %>% group_by(snp_threshold, cluster_size, cluster) %>%
mutate(mixed_lab=if_else(only_1_mixed==1, paste0(round(100*sum(study_site=="Soshanguve")/n()), "%"), ""))
View(clusters_merge)
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(aes(label=mixed_lab)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(aes(y=stat_count(), label=mixed_lab)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count))) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL)) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=2) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig2 <- ggplot(clusters_merge %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
#graphs
fig1 <- ggplot(clusters_merge %>% filter(snp_threshold==5), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("A. 5 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig1
clusters_merge_tmp <- clusters_merge %>%
mutate(facet_var=if_else(cluster_size>30, 2, 1))
fig3 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
facet_grid(cols=vars(facet_var), scales="free_x", space="free_x") +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("C. 20 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig3 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==20), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
facet_grid(cols=vars(facet_var), scales="free_x", space="free_x") +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("C. 20 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig3
fig3 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==20), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
facet_grid(cols=vars(facet_var), scales="free_x", space="free_x") +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
scale_x_continuous(breaks=c(5, 10, 15, 70),
expand=expansion(add=c(0.5, 0.5))) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("C. 20 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"),
strip.text=element_blank())
fig3
clusters_merge_tmp <- clusters_merge %>%
mutate(facet_var=if_else(cluster_size>30, 2, 1),
site_lab_tmp=if_else(site_lab=="Mixed", "Mixed (% urban)", site_lab))
clusters_merge_tmp <- clusters_merge %>%
mutate(facet_var=if_else(cluster_size>30, 2, 1),
site_lab=if_else(site_lab=="Mixed", "Mixed (% urban)", site_lab))
#graphs
fig1 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==5), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("A. 5 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position="none",
plot.title=element_text(size=11, face="bold"))
fig1
site_colors
site_colors_tmp <- site_colors
names(site_colors_tmp)[3] <- "Mixed (% urban)"
#graphs
fig1 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==5), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("A. 5 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position="none",
plot.title=element_text(size=11, face="bold"))
#graphs
fig1 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==5), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors_tmp) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("A. 5 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position="none",
plot.title=element_text(size=11, face="bold"))
fig1
fig2 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==12), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors_tmp) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("B. 12 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position=c(0.7, 0.75),
plot.title=element_text(size=11, face="bold"))
fig2
fig3 <- ggplot(clusters_merge_tmp %>% filter(snp_threshold==20), aes(x=cluster_size, fill=site_lab)) +
geom_bar(position=position_stack(reverse=T)) +
geom_text(stat="count", aes(label=mixed_lab, y=after_stat(count), group=cluster_size, fill=NULL),
nudge_y=3, size=3) +
facet_grid(cols=vars(facet_var), scales="free_x", space="free_x") +
scale_y_continuous(expand=expansion(mult=c(0, 0.02))) +
scale_fill_manual(values=site_colors_tmp) +
scale_x_continuous(breaks=c(5, 10, 15, 70),
expand=expansion(add=c(0.5, 0.5))) +
labs(x="Cluster Sizes", y="Number of isolates", fill="") +
ggtitle("C. 20 SNPs") +
theme_bw() + theme(panel.grid=element_blank(),
legend.position="none",
plot.title=element_text(size=11, face="bold"),
strip.text=element_blank())
fig3
top <- plot_grid(fig1, fig2, nrow=1, ncol=2, align="hv", rel_widths=c(0.35, 0.95))
plot <- plot_grid(top, fig3, nrow=2, ncol=1, align="hv")
ggsave(plot, filename=paste0(path, "output_analysis/combined_clusters_site_abstract.jpg"),
dpi=500, height=6, width=10)
library(deSolve)
library(dampack)
library(mvtnorm)
library(flexsurv)
library(lhs)
library(matrixStats)
library(dplyr)
library(stringr)
setwd("~/GitHub/tb-model-clearance/code")
setwd("~/GitHub/tb-model-clearance")
part <- 2
scenario <- "clearance"
B <- 100
version <- "omega_increase"
source('code/model_setup.R')
source('code/model_functions.R')
pars.baseline <- pars
par.range <- read.csv(paste0('data/par_range_', scenario, '_', version, '.csv'), row.names=1)[1:3,]
n_extra_states <- 16 #number of extra states/outcomes tracked in the model (like incidence, etc.)
tic <- Sys.time()
outputs <- samples_like(B, par.range, pars.baseline)
toc <- Sys.time()
print(toc-tic)
path <- paste0("samples_", version, "/")
fsave <- paste(path, 'samples_',part, '_', scenario, '.rda',sep='')
save(outputs, file=fsave)
